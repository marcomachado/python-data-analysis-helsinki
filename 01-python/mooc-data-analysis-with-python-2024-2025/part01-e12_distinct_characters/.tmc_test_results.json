[{"name": "test.test_distinct_characters.DistinctCharacters.test_empty", "status": "passed", "message": "", "passed": true, "points": ["p01-12.1"], "backtrace": []}, {"name": "test.test_distinct_characters.DistinctCharacters.test_first", "status": "errored", "message": "'check'", "passed": false, "points": ["p01-12.1"], "backtrace": ["  File \"/usr/lib/python3.12/unittest/case.py\", line 58, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 634, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 589, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"/home/marco/python-data-analysis-helsinki/01-python/mooc-data-analysis-with-python-2024-2025/part01-e12_distinct_characters/test/test_distinct_characters.py\", line 38, in test_first\n    self.assertEqual(d[\"check\"], 4, msg=\"Number of distinct characters of word 'check' was incorrect!\")\n                     ~^^^^^^^^^\n"]}, {"name": "test.test_distinct_characters.DistinctCharacters.test_random", "status": "failed", "message": "0 != 18", "passed": false, "points": ["p01-12.1"], "backtrace": ["  File \"/usr/lib/python3.12/unittest/case.py\", line 58, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 634, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 589, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"/home/marco/python-data-analysis-helsinki/01-python/mooc-data-analysis-with-python-2024-2025/part01-e12_distinct_characters/test/test_distinct_characters.py\", line 51, in test_random\n    self.assertEqual(len(d), len(set(L)))\n"]}]