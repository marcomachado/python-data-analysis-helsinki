[{"name": "test.test_detect_ranges.DetectRanges.test_fifth", "status": "failed", "message": "Lists differ: [-4, -2, 0, 2, 4] != [4, 2, 0, -2, -4]\n\nFirst differing element 0:\n-4\n4\n\n- [-4, -2, 0, 2, 4]\n+ [4, 2, 0, -2, -4] : Incorrect result for the input list [-4, -2, 0, 2, 4]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/usr/lib/python3.12/unittest/case.py\", line 58, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 634, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 589, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"/home/marco/python-data-analysis-helsinki/01-python/mooc-data-analysis-with-python-2024-2025/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 43, in test_fifth\n    self.assertEqual(detect_ranges(L), list(reversed(L)), msg=f\"Incorrect result for the input list {L}!\")\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_first", "status": "failed", "message": "Lists differ: [2, 4, 5, 6, 7, 8, 10, 12, 13] != [2, 5, 4, 8, 12, 6, 7, 10, 13]\n\nFirst differing element 1:\n4\n5\n\n- [2, 4, 5, 6, 7, 8, 10, 12, 13]\n+ [2, 5, 4, 8, 12, 6, 7, 10, 13] : Do not modify the input list [2, 5, 4, 8, 12, 6, 7, 10, 13]!", "passed": false, "points": ["p01-10.1"], "backtrace": ["  File \"/usr/lib/python3.12/unittest/case.py\", line 58, in testPartExecutor\n    yield\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 634, in run\n    self._callTestMethod(testMethod)\n", "  File \"/usr/lib/python3.12/unittest/case.py\", line 589, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"/home/marco/python-data-analysis-helsinki/01-python/mooc-data-analysis-with-python-2024-2025/part01-e10_detect_ranges/test/test_detect_ranges.py\", line 23, in test_first\n    self.assertEqual(L, Lc, msg=\"Do not modify the input list %s!\" % Lc)\n"]}, {"name": "test.test_detect_ranges.DetectRanges.test_fourth", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_random", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_second", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}, {"name": "test.test_detect_ranges.DetectRanges.test_third", "status": "passed", "message": "", "passed": true, "points": ["p01-10.1"], "backtrace": []}]